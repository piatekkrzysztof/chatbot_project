# Generated by Django 5.1.7 on 2025-04-02 16:19

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Conversation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_identifier', models.CharField(max_length=100)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tenant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nazwa klienta')),
                ('api_key', models.CharField(default=uuid.uuid4, max_length=100, unique=True, verbose_name='Klucz API')),
                ('owner_email', models.EmailField(max_length=254, verbose_name='Owner email')),
                ('gpt_prompt', models.TextField(default='Jesteś chatbotem z obsługi klienta', verbose_name='Prompt GPT')),
                ('regulamin', models.TextField(default='Treść regulaminu')),
                ('openai_api_key', models.CharField(blank=True, max_length=255, null=True)),
                ('widget_position', models.CharField(choices=[('bottom-right', 'Dół strony (prawy)'), ('bottom-left', 'Dół strony (lewy)'), ('side-right', 'Boczny (prawy)'), ('side-left', 'Boczny (lewy)'), ('hamburger', 'Przycisk hamburger')], default='bottom-right', max_length=20)),
                ('widget_color', models.CharField(default='#3b82f6', max_length=7)),
                ('widget_title', models.CharField(default='Chatbot', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='ChatMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sender', models.CharField(max_length=24)),
                ('message', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('conversation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='chatbot.conversation')),
            ],
        ),
        migrations.CreateModel(
            name='FAQ',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField()),
                ('answer', models.TextField()),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='faqs', to='chatbot.tenant')),
            ],
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='chatbot.tenant')),
            ],
        ),
        migrations.AddField(
            model_name='conversation',
            name='tenant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conversations', to='chatbot.tenant'),
        ),
        migrations.CreateModel(
            name='ChatUsageLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tokens_used', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='usage_logs', to='chatbot.tenant')),
            ],
        ),
    ]
