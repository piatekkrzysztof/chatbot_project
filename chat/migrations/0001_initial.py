# Generated by Django 5.1.7 on 2025-06-25 09:07

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0009_alter_tenant_widget_position'),
    ]

    operations = [
        migrations.CreateModel(
            name='ChatMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sender', models.CharField(choices=[('user', 'User'), ('bot', 'Bot'), ('system', 'System')], max_length=24)),
                ('message', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('source', models.CharField(choices=[('faq', 'FAQ'), ('document', 'Document'), ('gpt', 'OpenAI'), ('fallback', 'Fallback'), ('manual', 'Manual')], default='gpt', max_length=20)),
                ('token_count', models.PositiveIntegerField(default=0, help_text='Liczba tokenów tej wiadomości (jeśli dotyczy)')),
            ],
        ),
        migrations.CreateModel(
            name='ChatFeedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_helpful', models.BooleanField()),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('message', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='feedback', to='chat.chatmessage')),
            ],
        ),
        migrations.CreateModel(
            name='Conversation',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('session_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('user_identifier', models.CharField(max_length=100)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('last_message_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(default='active', max_length=20)),
                ('source', models.CharField(default='widget', max_length=30)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conversations', to='accounts.tenant')),
            ],
            options={
                'ordering': ['-last_message_at'],
            },
        ),
        migrations.CreateModel(
            name='ChatUsageLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('tokens_used', models.PositiveIntegerField()),
                ('model_used', models.CharField(default='gpt-3.5-turbo', max_length=50)),
                ('source', models.CharField(choices=[('faq', 'FAQ'), ('document', 'Document'), ('gpt', 'OpenAI'), ('fallback', 'Fallback'), ('manual', 'Manual')], default='gpt', max_length=20)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='usage_logs', to='accounts.tenant')),
                ('conversation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='chat.conversation')),
            ],
        ),
        migrations.AddField(
            model_name='chatmessage',
            name='conversation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='chat.conversation'),
        ),
        migrations.CreateModel(
            name='FAQ',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField()),
                ('answer', models.TextField()),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='faqs', to='accounts.tenant')),
            ],
        ),
        migrations.CreateModel(
            name='PromptLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model', models.CharField(max_length=50)),
                ('prompt', models.TextField()),
                ('source', models.CharField(choices=[('faq', 'FAQ'), ('document', 'RAG'), ('gpt', 'GPT fallback')], max_length=50)),
                ('tokens', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('response', models.TextField(blank=True, null=True)),
                ('conversation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='chat.conversation')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.tenant')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Chat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='ID Sesji')),
                ('user_ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP użytkownika')),
                ('user_agent', models.TextField(blank=True, verbose_name='Przeglądarka użytkownika')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktywna sesja')),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('ended_at', models.DateTimeField(blank=True, null=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chats', to='accounts.client', verbose_name='Konfiguracja Chatbota')),
            ],
            options={
                'verbose_name': 'Sesja Chat',
                'verbose_name_plural': 'Sesje Chatów',
                'indexes': [models.Index(fields=['session_id'], name='chat_chat_session_19463b_idx'), models.Index(fields=['client', 'started_at'], name='chat_chat_client__e2dfb3_idx')],
            },
        ),
    ]
